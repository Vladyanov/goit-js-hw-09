{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKb,MAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BX,MAAOU,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,yBAkBjCH,EAAKC,KAAKK,iBAAiB,UAf3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOV,EAAKR,MAAMmB,OAC9B,IAAK,IAAIC,EAAW,EAAGA,GAAYF,OAAOV,EAAKK,OAAOM,OAAQC,IAC5DtB,EAAcsB,EAAUH,GACrBI,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEhEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAEhEiB,GAASC,OAAOV,EAAKI,KAAKO,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delay.value);\n  for (let position = 1; position <= Number(refs.amount.value); position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(refs.step.value);\n  }\n}\n\nrefs.form.addEventListener('submit', handleSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$refs","form","document","querySelector","step","amount","addEventListener","e","preventDefault","delay1","Number","value","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.9790ef3f.js.map"}